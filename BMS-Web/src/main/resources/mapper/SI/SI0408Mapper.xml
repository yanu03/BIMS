<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.tracom.bms.domain.SI0408.SI0408Mapper">

<select id="SI0408G1R0" resultType="Map">

	SELECT A.ROUT_ID, A.NODE_SN, IFNULL(B.NODE_CHILD_SN,-1) AS NODE_CHILD_SN, NODE_CHILD_SN AS OLD_NODE_CHILD_SN, A.NODE_ID, IFNULL(B.NODE_TYPE
		, A.NODE_TYPE) AS NODE_TYPE, IFNULL(B.NODE_NM, A.NODE_NM) AS NODE_NM, IFNULL(B.GPS_X, A.GPS_X) AS GPS_X, IFNULL(B.GPS_Y, A.GPS_Y) AS GPS_Y 
		, A.GPS_X AS ORG_GPS_X, A.GPS_Y AS ORG_GPS_Y, A.LINK_ID, C.MORN_STD, R.REP_ROUT_ID, R.WAY_DIV
		,E.GPS_X AS ST_GPS_X, E.GPS_Y AS ST_GPS_Y, F.GPS_X AS ED_GPS_X, F.GPS_Y AS ED_GPS_Y
	FROM BMS_ROUT_NODE_CMPSTN A INNER JOIN BMS_ROUT_MST R ON A.ROUT_ID = R.ROUT_ID AND R.DEL_YN !='Y'
		LEFT OUTER JOIN BMS_ROUT_NODE_DISP_CMPSTN B ON A.ROUT_ID = B.ROUT_ID AND A.NODE_SN = B.NODE_SN
		LEFT OUTER JOIN  BMS_ROUT_LINK_CMPSTN C ON A.ROUT_ID = C.ROUT_ID AND A.LINK_ID = C.LINK_ID
		LEFT OUTER JOIN BMS_LINK_MST D ON C.LINK_ID = D.LINK_ID
		LEFT OUTER JOIN BMS_NODE_MST E ON D.ST_NODE_ID = E.NODE_ID 
		LEFT OUTER JOIN BMS_NODE_MST F ON D.ED_NODE_ID = F.NODE_ID
	WHERE A.NODE_TYPE != 'NT006' AND A.ROUT_ID = #{ROUT_ID}
	 ORDER BY NODE_SN, NODE_CHILD_SN
</select>

<insert id="SI0408G1I0" parameterType="Map">
	INSERT INTO BMS_ROUT_NODE_DISP_CMPSTN
		(ROUT_ID,NODE_SN,NODE_CHILD_SN,NODE_TYPE,NODE_NM,GPS_X,GPS_Y)
	VALUES(#{ROUT_ID},#{NODE_SN},#{NODE_CHILD_SN},#{NODE_TYPE},#{NODE_NM},#{GPS_X},#{GPS_Y})
	ON DUPLICATE KEY UPDATE
		NODE_TYPE = #{NODE_TYPE}
		, NODE_NM	= VALUES(NODE_NM)
		, GPS_X	= VALUES(GPS_X)
		, GPS_Y	= VALUES(GPS_Y);
</insert>

<insert id="SI0408G1U0" parameterType="Map">
	UPDATE BMS_ROUT_NODE_DISP_CMPSTN
		SET NODE_TYPE = #{NODE_TYPE}, NODE_NM = #{NODE_NM}, NODE_CHILD_SN = #{NODE_CHILD_SN}, GPS_X = #{GPS_X}, GPS_Y = #{GPS_Y}
	WHERE ROUT_ID= #{ROUT_ID} AND NODE_SN= #{NODE_SN} AND NODE_CHILD_SN= #{OLD_NODE_CHILD_SN};
</insert>

<delete id="SI0408G1D0" parameterType="Map">
	DELETE FROM BMS_ROUT_NODE_DISP_CMPSTN
	WHERE ROUT_ID = #{ROUT_ID} 
	AND NODE_SN = #{NODE_SN}
	AND NODE_CHILD_SN= #{OLD_NODE_CHILD_SN};
</delete>

<insert id="SI0408G1U1" parameterType="Map">
	UPDATE BMS_ROUT_NODE_DISP_CMPSTN
		SET NODE_TYPE = #{NODE_TYPE}, NODE_NM = #{NODE_NM}, NODE_CHILD_SN = #{NODE_CHILD_SN}, GPS_X = #{GPS_X}, GPS_Y = #{GPS_Y}
	WHERE ROUT_ID= #{ROUT_ID} AND NODE_SN= #{NODE_SN} AND NODE_CHILD_SN= #{NODE_CHILD_SN};
</insert>

<delete id="SI0408G1D1" parameterType="Map">
	DELETE FROM BMS_ROUT_NODE_DISP_CMPSTN
	WHERE ROUT_ID = #{ROUT_ID} 
	AND NODE_SN = #{NODE_SN}
	AND NODE_CHILD_SN= #{NODE_CHILD_SN};
</delete>

<select id="selectRoutNodeAllByRepRout" resultType="Map">
	SELECT B.ROUT_ID, B.NODE_SN, B.NODE_ID, B.NODE_TYPE, B.NODE_NM, B.GPS_X AS ORG_GPS_X
		, B.GPS_Y AS ORG_GPS_Y, B.MORN_STD, B.LINK_ID, A.REP_ROUT_ID, A.WAY_DIV
	FROM BMS_ROUT_MST A LEFT OUTER JOIN  BMS_ROUT_NODE_CMPSTN B ON A.ROUT_ID = B.ROUT_ID  
	WHERE B.NODE_TYPE != 'NT006' AND A.REP_ROUT_ID = #{REP_ROUT_ID} AND A.ROUT_ID != #{ROUT_ID} AND A.WAY_DIV = #{WAY_DIV} ORDER BY ROUT_ID, NODE_SN
</select>

<select id="selectGpsLink" resultType="Map" parameterType="String">
		SELECT
			B.GPS_X AS ST_GPS_X, B.GPS_Y AS ST_GPS_Y, C.GPS_X AS ED_GPS_X, C.GPS_Y AS ED_GPS_Y
		FROM BMS_LINK_MST A
			LEFT JOIN BMS_NODE_MST B ON A.ST_NODE_ID = B.NODE_ID 
			LEFT JOIN BMS_NODE_MST C ON A.ED_NODE_ID = C.NODE_ID
		WHERE LINK_ID = #{linkId}
    </select>

</mapper>